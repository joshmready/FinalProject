@model FinalProject.DATA.EF.CustomerAsset

@{
    ViewBag.Title = "Edit";
}



@using (Html.BeginForm("Edit", "CustomerAssets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="center" id="SB">
    <hr />
    <h2>@ViewBag.Title</h2>
    <hr />
    <h4>Customer Vehicle</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CustomerAssetID)

    @Html.HiddenFor(model => model.AssetPhoto)
    @Html.HiddenFor(model => model.AssetName)
    @Html.HiddenFor(model => model.CustomerID)

    @if (!User.IsInRole("Employee"))
    {
    <div class="form-group">
        @Html.LabelFor(model => model.AssetName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AssetName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })
        </div>
    </div>
    }
    else
    {
        @Html.DisplayNameFor(x=>x.AssetName): @Html.DisplayFor(x => x.AssetName);
    }


    <div class="form-group">
        @Html.LabelFor(model => model.CustomerID, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.AssetPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            <p>
                <label>Existing Image:</label><br />
                <img src="~/Content/CustomImages/t_@Model.AssetPhoto" alt="@Model.AssetName" />
            </p>
            <p><label>Change Image: </label><input type="file" name="AssetImage" /></p>
            @*@Html.EditorFor(model => model.AssetPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssetPhoto, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SpecialNotes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpecialNotes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SpecialNotes, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary d-none d-sm-block btn-style mr-2 button" style="padding-left:2em; width:250px;" />
        </div>
    </div>

    <div class="BackToList">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
